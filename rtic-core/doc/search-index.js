var searchIndex = new Map(JSON.parse('[\
["rtic_core",{"doc":"TODO: Crate level documentation needed to describe the …","t":"FFFKFKFFOONNNNNNNNNNNNNNNOOMONNNNNNNNNNMMMOONNNNNNOCNONNCMOMMMCCNNMMOOOONNNNNNNNNNNNNNNNNNOOMHHHFNNONNNONNNNNNNSSSSS","n":["Analysis","App","AppArgs","CorePassBackend","RticMacroBuilder","RticPass","SubAnalysis","SubApp","app_name","args","bind_post_core_pass","bind_pre_core_pass","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_rtic_macro","core","cores","default_task_priority","device","fmt","fmt","fmt","fmt","from","from","from","from","from","from","generate_global_definitions","generate_interrupt_free_fn","generate_resource_proxy_lock_impl","idle","init","into","into","into","into","into","into","late_resource_tasks","multibin","new","other_code","parse","parse","parse_utils","pass_name","peripherals","populate_idle_loop","post_init","pre_codgen_validation","rtic_functions","rtic_traits","run","run","run_pass","set_entry_name","shared","sub_analysis","sub_apps","tasks","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","used_irqs","user_includes","wrap_task_execution","multibin_cfg_core","multibin_cfg_not_core","multibin_shared","RticAttr","borrow","borrow_mut","elements","fmt","from","into","name","parse_from_attr","parse_from_tokens","span","to_tokens","try_from","try_into","type_id","INTERRUPT_FREE_FN","HWT_TRAIT_TY","IDLE_TRAIT_TY","MUTEX_TY","SWT_TRAIT_TY"],"q":[[0,"rtic_core"],[93,"rtic_core::multibin"],[96,"rtic_core::parse_utils"],[111,"rtic_core::rtic_functions"],[112,"rtic_core::rtic_traits"],[116,"proc_macro"],[117,"core::fmt"],[118,"core::fmt"],[119,"core::option"],[120,"syn::item"],[121,"syn::item"],[122,"syn::item"],[123,"core::any"],[124,"syn::attr"],[125,"proc_macro2"]],"d":["","","Arguments provided to the #[app(…)] macro attribute, …","Interface for providing the low-level hardware bindings …","This should be used to compose an <strong>RTIC distribution</strong>. In …","A trait that allows defining a <strong>Compilation Pass</strong>.","","","","","Binds a <strong>Compilation Pass</strong> that will run after the <strong>Core Pass</strong>","Binds a <strong>Compilation Pass</strong> that will run before the <strong>Core Pass</strong>","","","","","","","","","","","","","Once the <strong>CorePass</strong> low level hardware bindings are …","","","Implementation must return the default task priority to be …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Implementation specific pre-computed values and global …","Non-preemptable code sections","SRP-based Resource locking implementation","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Provides a utility to streamline parsing and manipulating …","Returns a human readable name/alias used to identify the …","","Customizing the default behavior of idle task","Setting up the system","Additional user code validation","","","updates resource ceilingscollects and structure key …","","Runs the (partial) proc-macro logic that allows extending …","Entry name for a specific core","","","","","","","","","","","","","","","","","","","","","","","","","Wrapping task execution","If <code>multibin</code> feature is enabled, this returns a tokenstream …","If <code>multibin</code> feature is enabled, this returns a tokenstream …","If <code>multibin</code> feature is enabled, this returns a tokenstream …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Parse a #[app(arg1=“val1”, …)] macro attribute","Parse the tokenstream representation of the arguments of …","","Reconstruct the tokenstream representation of #[app(arg1=…","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,11,11,1,1,19,1,6,9,10,11,19,1,6,9,10,11,1,10,9,4,9,6,9,10,11,19,1,6,9,10,11,4,4,4,10,10,19,1,6,9,10,11,6,0,1,11,9,11,0,2,9,4,4,4,0,0,19,6,2,4,10,19,11,10,19,1,6,9,10,11,19,1,6,9,10,11,19,1,6,9,10,11,6,11,4,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[1,-1],1,2],[[1,-1],1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,3,3],3],0,0,[4,5],0,[[6,7],8],[[9,7],8],[[10,7],8],[[11,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,9,10,6],[[13,[12]]]],[[4,14],14],[[4,9,10,15],15],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,1,4],0,[12,[[16,[9]]]],[[12,17],[[16,[11]]]],0,[2,18],0,[4,[[13,[12]]]],[[4,9,10,6],[[13,[12]]]],[[4,11,19],[[16,[20]]]],0,0,[11,[[16,[19]]]],[10,[[16,[6]]]],[[2,12,17],[[16,[[20,[12,17]]]]]],[[4,21],22],0,0,0,0,[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,[[4,5,12],[[13,[12]]]],[21,[[13,[25]]]],[21,[[13,[25]]]],[[],[[13,[25]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[26,7],8],[-1,-1,[]],[-1,-2,[],[]],0,[25,[[16,[26]]]],[12,[[16,[26]]]],[-1,27,[]],[[26,12],20],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],0,0,0,0,0],"c":[],"p":[[5,"RticMacroBuilder",0],[10,"RticPass",0],[5,"TokenStream",116],[10,"CorePassBackend",0],[1,"u16"],[5,"SubAnalysis",0],[5,"Formatter",117],[8,"Result",117],[5,"AppArgs",0],[5,"SubApp",0],[5,"App",0],[5,"TokenStream",118],[6,"Option",119],[5,"ItemFn",120],[5,"ImplItemFn",120],[8,"Result",121],[5,"ItemMod",120],[1,"str"],[5,"Analysis",0],[1,"tuple"],[1,"u32"],[5,"Ident",118],[6,"Result",122],[5,"TypeId",123],[5,"Attribute",124],[5,"RticAttr",96],[5,"Span",118]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
